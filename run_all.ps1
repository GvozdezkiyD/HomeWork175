# ================================================================
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∞–π–ø–ª–∞–π–Ω PD-–º–æ–¥–µ–ª–∏ (PowerShell 7+)
# –í–µ—Ä—Å–∏—è: 3.0 ‚Äî –∞–≤—Ç–æ-venv, PYTHONPATH, DVC, Docker, –ø—Ä–æ–≤–µ—Ä–∫–∞ API
# ================================================================

# ---------- –ù–ê–°–¢–†–û–ô–ö–ò ----------
$WITH_DVC        = $true     # –ø—Ä–æ–≥–æ–Ω dvc init/add/repro
$WITH_DOCKER     = $true     # docker build
$RUN_CONTAINER   = $false    # –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏ (–µ—Å–ª–∏ true ‚Äî –µ—â—ë –∏ –ø—Ä–æ–≤–µ—Ä–∏–º /predict)
$CHECK_API_LOCAL = $true     # –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π FastAPI —á–µ—Ä–µ–∑ uvicorn (–±–µ–∑ Docker)
$MLFLOW_UI_HINT  = $true     # –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É mlflow ui
# --------------------------------------------------------

$env:PYTHONPATH = "$PSScriptRoot"
$ErrorActionPreference = "Stop"
Write-Host "`nüöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ PD-–º–æ–¥–µ–ª–∏..." -ForegroundColor Yellow

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã ---
$venvPath = ".\.venv\Scripts\Activate.ps1"
if (Test-Path $venvPath) {
    if (-not $env:VIRTUAL_ENV) {
        Write-Host "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É..." -ForegroundColor Cyan
        & $venvPath
    }
} else {
    Write-Host "–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞—é..." -ForegroundColor Yellow
    python -m venv .venv
    & ".\.venv\Scripts\Activate.ps1"
}

# --- –î–µ–ª–∞–µ–º src/ –ø–∞–∫–µ—Ç–æ–º, —á—Ç–æ–±—ã import src.* —Ä–∞–±–æ—Ç–∞–ª –≤—Å–µ–≥–¥–∞ ---
New-Item -ItemType File -Path "src\__init__.py" -Force | Out-Null
New-Item -ItemType File -Path "src\data\__init__.py" -Force | Out-Null
New-Item -ItemType File -Path "src\features\__init__.py" -Force | Out-Null
New-Item -ItemType File -Path "src\models\__init__.py" -Force | Out-Null
New-Item -ItemType File -Path "src\api\__init__.py" -Force | Out-Null

# --- –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ CSV ---
if (-not (Test-Path "data\raw\UCI_Credit_Card.csv")) {
    Write-Host "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω data\raw\UCI_Credit_Card.csv. –ü–æ–ª–æ–∂–∏ —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å—Ç–∏ —Å–Ω–æ–≤–∞." -ForegroundColor Red
    exit 1
}

# --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip/setuptools/wheel ---
Write-Host "`n1) –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..." -ForegroundColor Cyan
python -m pip install --upgrade pip setuptools wheel

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞ ---
Write-Host "`n2) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ requirements.txt..." -ForegroundColor Cyan
try {
    python -m pip install -r requirements.txt
} catch {
    Write-Host "‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∏–Ω–∞—Ä—è–º–∏. –°—Ç–∞–≤–ª—é –≥–æ—Ç–æ–≤—ã–µ –∫–æ–ª—ë—Å–∞ pandas/numpy –∏ –¥–æ–∫–∞—Ç—ã–≤–∞—é –æ—Å—Ç–∞–ª—å–Ω–æ–µ..." -ForegroundColor Yellow
    python -m pip install --only-binary=:all: pandas numpy
    python -m pip install -r requirements.txt --no-deps
}

# --- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö ---
Write-Host "`n3) –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞..." -ForegroundColor Cyan
python src/data/make_dataset.py

# --- –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (Pandera/GE ‚Äî –≤ —Ñ–∞–π–ª–µ validation.py –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—à—å) ---
Write-Host "`n4) –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Cyan
try {
    if (Test-Path "src\data\validation.py") {
        python src/data/validation.py
    } else {
        Write-Host "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª src\data\validation.py" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è —É–ø–∞–ª–∞. –°–º–æ—Ç—Ä–∏ –æ—Ç—á—ë—Ç—ã –≤ data/expectations/*.json" -ForegroundColor Red
    exit 1
}

# --- –ú–µ–ª–∫–∏–π –ø–∞—Ç—á train.py: artifact_path -> name (—É–±—Ä–∞—Ç—å WARNING MLflow) ---
$trainPath = "src\models\train.py"
if (Test-Path $trainPath) {
    $content = Get-Content $trainPath -Raw
    if ($content -match "artifact_path\s*=") {
        $content = $content -replace "artifact_path\s*=", "name="
        Set-Content $trainPath $content -Encoding UTF8
        Write-Host "‚ÑπÔ∏è  –û–±–Ω–æ–≤–∏–ª MLflow –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏: artifact_path -> name" -ForegroundColor DarkCyan
    }
}

# --- –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (MLflow) ---
Write-Host "`n5) –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ MLflow..." -ForegroundColor Cyan
python src/models/train.py

# --- –Æ–Ω–∏—Ç-—Ç–µ—Å—Ç—ã –∏ —Å—Ç–∏–ª—å ---
Write-Host "`n6) –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..." -ForegroundColor Cyan
$testsOk = $true
try {
    pytest -q
    flake8
    black --check .
} catch {
    $testsOk = $false
    Write-Host "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞/—Ç–µ—Å—Ç—ã –≤–µ—Ä–Ω—É–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—à–∏–±–∫–∏. –ü—Ä–æ–¥–æ–ª–∂–∞—é –ø–∞–π–ø–ª–∞–π–Ω." -ForegroundColor Yellow
}

# --- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥—Ä–∏—Ñ—Ç–∞ ---
Write-Host "`n7) –†–∞—Å—á—ë—Ç –º–µ—Ç—Ä–∏–∫–∏ –¥—Ä–∏—Ñ—Ç–∞ PSI..." -ForegroundColor Cyan
python monitor/drift_monitor.py

# --- DVC: init / add / repro ---
if ($WITH_DVC) {
    Write-Host "`n8) DVC –ø–∞–π–ø–ª–∞–π–Ω..." -ForegroundColor Cyan
    if (-not (Test-Path ".dvc")) {
        dvc init
    }
    if (-not (Test-Path "data\raw\UCI_Credit_Card.csv.dvc")) {
        dvc add data/raw/UCI_Credit_Card.csv
    }
    dvc repro
}

# --- Docker: build (run –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ /predict) ---
if ($WITH_DOCKER) {
    Write-Host "`n9) Docker —Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..." -ForegroundColor Cyan
    docker build -t credit-scoring-api .
    if ($RUN_CONTAINER) {
        Write-Host "–ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ 8000..." -ForegroundColor Cyan
        $cid = (docker run -d -p 8000:8000 credit-scoring-api).Trim()
        Start-Sleep -Seconds 4

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ POST /predict
        try {
            $body = @{
              limit_bal = 200000
              sex = 1
              education = 2
              marriage = 1
              age = 35
              pay_1 = 0
              bill_amt1 = 5000
              pay_amt1 = 2000
            } | ConvertTo-Json
            $resp = Invoke-RestMethod -Method Post -Uri "http://127.0.0.1:8000/predict" -ContentType "application/json" -Body $body
            Write-Host "‚úÖ –û—Ç–≤–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ /predict: $($resp | ConvertTo-Json -Depth 5)" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ /predict" -ForegroundColor Red
        } finally {
            if ($cid) { docker stop $cid | Out-Null }
        }
    } else {
        Write-Host "–ü—Ä–æ–ø—É—â–µ–Ω –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (RUN_CONTAINER=false). –ó–∞–ø—É—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏:" -ForegroundColor DarkGray
        Write-Host "docker run --rm -p 8000:8000 credit-scoring-api" -ForegroundColor DarkGray
    }
}

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ API —á–µ—Ä–µ–∑ uvicorn ---
if ($CHECK_API_LOCAL) {
    Write-Host "`n10) –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ API (–±–µ–∑ Docker)..." -ForegroundColor Cyan
    Write-Host "–ó–∞–ø—É—Å–∫–∞—Ç—å uvicorn –≤ —Ñ–æ–Ω–µ –Ω–µ –±—É–¥—É, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç." -ForegroundColor DarkGray
    Write-Host "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –≤—ã–ø–æ–ª–Ω–∏ –æ—Ç–¥–µ–ª—å–Ω–æ: uvicorn src.api.app:APP --host 0.0.0.0 --port 8000" -ForegroundColor DarkGray
}

# --- –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ ---
Write-Host "`n‚úÖ –ì–æ—Ç–æ–≤–æ! –ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞, –º–µ—Ç—Ä–∏–∫–∏ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω—ã, PSI —Ä–∞—Å—Å—á–∏—Ç–∞–Ω." -ForegroundColor Green
if ($MLFLOW_UI_HINT) {
    Write-Host "üëâ MLflow UI: mlflow ui" -ForegroundColor Yellow
}
Write-Host "üëâ –ó–∞–ø—É—Å–∫ API –ª–æ–∫–∞–ª—å–Ω–æ: uvicorn src.api.app:APP --host 0.0.0.0 --port 8000" -ForegroundColor Yellow
Write-Host "üëâ Docker: docker run --rm -p 8000:8000 credit-scoring-api" -ForegroundColor Yellow
Write-Host "`n===============================================================" -ForegroundColor DarkGray